name: Deployment Checks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Frontend Build and Test
  frontend-checks:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: TypeScript check
      run: npx tsc --noEmit

    - name: Build application
      run: npm run build

    - name: Security audit
      run: npm audit --audit-level=high

    - name: Check for environment variables
      run: |
        echo "Checking for required environment variables..."
        if [ -z "$VITE_FIREBASE_API_KEY" ]; then
          echo "‚ö†Ô∏è  VITE_FIREBASE_API_KEY not set (using fallback)"
        fi
        if [ -z "$VITE_FIREBASE_AUTH_DOMAIN" ]; then
          echo "‚ö†Ô∏è  VITE_FIREBASE_AUTH_DOMAIN not set (using fallback)"
        fi
        if [ -z "$VITE_FIREBASE_PROJECT_ID" ]; then
          echo "‚ö†Ô∏è  VITE_FIREBASE_PROJECT_ID not set (using fallback)"
        fi
        echo "‚úÖ Environment variable check completed"

  # Backend Build and Test
  backend-checks:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: TypeScript check
      run: npx tsc --noEmit

    - name: Build application
      run: npm run build

    - name: Security audit
      run: npm audit --audit-level=high

  # Code Quality Checks
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check for sensitive data
      run: |
        echo "Checking for sensitive data in code..."
        if grep -r "sk_live_" . --exclude-dir=node_modules --exclude-dir=.git; then
          echo "‚ùå Found potential live secret keys"
          exit 1
        fi
        if grep -r "AIza[0-9A-Za-z_-]{35}" . --exclude-dir=node_modules --exclude-dir=.git; then
          echo "‚ùå Found potential API keys in code"
          exit 1
        fi
        if grep -r "mongodb://.*:.*@" . --exclude-dir=node_modules --exclude-dir=.git; then
          echo "‚ùå Found potential database credentials in code"
          exit 1
        fi
        echo "‚úÖ No sensitive data found in code"

    - name: Check file sizes
      run: |
        echo "Checking for large files..."
        find . -name "*.js" -size +1M -not -path "./node_modules/*" -not -path "./.git/*" | while read file; do
          echo "‚ö†Ô∏è  Large file found: $file"
        done

  # Deployment readiness
  deployment-readiness:
    runs-on: ubuntu-latest
    needs: [frontend-checks, backend-checks, code-quality]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Verify build artifacts
      run: |
        echo "Verifying build artifacts..."
        if [ ! -d "frontend/build" ]; then
          echo "‚ùå Frontend build directory not found"
          exit 1
        fi
        if [ ! -d "backend/dist" ]; then
          echo "‚ùå Backend build directory not found"
          exit 1
        fi
        echo "‚úÖ Build artifacts verified"

    - name: Check deployment configuration
      run: |
        echo "Checking deployment configuration..."
        if [ ! -f "frontend/vercel.json" ]; then
          echo "‚ö†Ô∏è  Frontend Vercel config not found"
        fi
        if [ ! -f ".vercelignore" ]; then
          echo "‚ö†Ô∏è  Vercel ignore file not found"
        fi
        echo "‚úÖ Deployment configuration checked"

    - name: Deployment readiness summary
      run: |
        echo "üéâ All deployment checks passed!"
        echo "‚úÖ Frontend build: Ready"
        echo "‚úÖ Backend build: Ready"
        echo "‚úÖ Security: Passed"
        echo "‚úÖ Code quality: Passed"
        echo "‚úÖ Configuration: Ready"
